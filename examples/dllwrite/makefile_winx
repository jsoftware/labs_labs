# cross compilaton using clangcl on linux/mac

ifeq (ARM64,$(TARGET_CPU))
CFLAGS= -target arm64-pc-windows-msvc -march=armv8-a+crc /WX /W3 /O2 /GS /D_USING_V110_SDK71_ /D_CRT_SECURE_NO_WARNINGS /MT
FLAGS= /DLL /NOLOGO /MACHINE:ARM64 /SUBSYSTEM:WINDOWS,5.02
else ifeq (x64,$(TARGET_CPU))
CFLAGS= /WX /W3 /O2 /GS /D_USING_V110_SDK71_ /D_CRT_SECURE_NO_WARNINGS /MT
FLAGS= /DLL /NOLOGO /MACHINE:X64 /SUBSYSTEM:WINDOWS,5.02
else
CFLAGS= -m32 /WX /W3 /Ot /Oy- /GS /D_USING_V110_SDK71_ /D_CRT_SECURE_NO_WARNINGS /MT
FLAGS= /DLL /NOLOGO /MACHINE:X86 /SUBSYSTEM:WINDOWS,5.01
endif

.SUFFIXES: .o

OBJS=  dlltest.o

DEF=   dlltest.def

ifndef LD
LD=link
endif

%.o: %.c
	$(CC) $(CFLAGS) /Fo$@ /c $<

ifeq (ARM64,$(TARGET_CPU))
TARGET= dlltest_arm64.dll
else ifeq (x64,$(TARGET_CPU))
TARGET= dlltest.dll
else
TARGET= dlltest_32.dll
endif

$(TARGET) : $(OBJS)
	$(LD) /DEF:$(DEF) $(FLAGS) /out:$@ $(OBJS)

all: $(TARGET)

clean:
	rm -f *.lib *.exp *.res $(OBJS)

.PHONY: all clean
